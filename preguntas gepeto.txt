Tengo el siguiente proyecto hecho en python para una calculadora, estructurado de la sgiente manera:
PYTHON GUI CALCU
---__init__.py
---Controlador.py
---GUI.py
---main.py
---operaciones.py

este es mi archivo Controlador.py:

# controlador.py

class CalculatorController:
    def __init__(self, calculator):
        self.calculator = calculator

    def realizar_operacion(self, operacion, num1, num2):
        try:
            # Lógica para manejar diferentes operaciones
            if operacion == "sumar":
                return self.calculator.sumar(num1, num2)
            elif operacion == "restar":
                return self.calculator.restar(num1, num2)
            elif operacion == "multiplicar":
                return self.calculator.multiplicar(num1, num2)
            elif operacion == "dividir":
                return self.calculator.dividir(num1, num2)
            elif operacion == "potencia":
                return self.calculator.potencia(num1, num2)
            else:
                raise ValueError("Operación no válida")
        except Exception as e:
            raise e

este es mi archivo operaciones.py:

import tkinter as tk
from tkinter import messagebox

class Calculator:
    def sumar(self, a, b):
        return a + b

    def restar(self, a, b):
        return a - b

    def multiplicar(self, a, b):
        return a * b

    def dividir(self, a, b):
        if b != 0:
            return a / b
        else:
            messagebox.showerror("Error", "División por cero")
            return None
    
    def potencia(self, a, b):
        return a ** b

Este es mi archivo GUI.py

# GUI.py
import tkinter as tk
from tkinter import messagebox
from tkinter import ttk

class CalculatorUI:
    def __init__(self, root, controller):
        self.controller = controller
        
        root.title("Calculadora")
        
        # Estilos
        style = ttk.Style()
        style.configure("TButton", font=('Helvetica', 12, 'bold'), activebackground="green", background="#D2691B", foreground='green', padding=10)
        style.configure("TLabel", font=('Helvetica', 12), background="#D2691B")
        style.configure("TRadiobutton", padding=5, background="#D2691B")

        root.configure(background="#F2BC13")

        # Componentes de la interfaz
        self.label_num1 = ttk.Label(root, text="Ingrese el primer número:")
        self.label_num1.pack(pady=5)

        self.entry_num1 = ttk.Entry(root)
        self.entry_num1.pack(pady=5)

        self.label_num2 = ttk.Label(root, text="Ingrese el segundo número:")
        self.label_num2.pack(pady=5)

        self.entry_num2 = ttk.Entry(root)
        self.entry_num2.pack(pady=5)

        self.operacion_var = tk.StringVar(value="sumar")

        self.frame_radio_buttons = tk.Frame(root, background="#D2691B")
        self.frame_radio_buttons.pack(pady=10)

        self.radio_sumar = ttk.Radiobutton(self.frame_radio_buttons, text="Suma", variable=self.operacion_var, value="sumar", style="TRadiobutton")
        self.radio_sumar.grid(row=0, column=0, padx=5)

        self.radio_restar = ttk.Radiobutton(self.frame_radio_buttons, text="Resta", variable=self.operacion_var, value="restar", style="TRadiobutton")
        self.radio_restar.grid(row=0, column=1, padx=5)

        self.radio_multiplicar = ttk.Radiobutton(self.frame_radio_buttons, text="Multiplicación", variable=self.operacion_var, value="multiplicar", style="TRadiobutton")
        self.radio_multiplicar.grid(row=0, column=2, padx=5)

        self.radio_dividir = ttk.Radiobutton(self.frame_radio_buttons, text="División", variable=self.operacion_var, value="dividir", style="TRadiobutton")
        self.radio_dividir.grid(row=0, column=3, padx=5)

        self.radio_potencia = ttk.Radiobutton(self.frame_radio_buttons, text="Potencia", variable=self.operacion_var, value="potencia", style="TRadiobutton")
        self.radio_potencia.grid(row=0, column=4, padx=5)

        self.btn_calcular = ttk.Button(root, text="Calcular", command=self.realizar_operacion, style="TButton")
        self.btn_calcular.pack(pady=10)

        self.label_resultado = ttk.Label(root, text="Resultado: ")
        self.label_resultado.pack(pady=10)

        self.btn_salir = ttk.Button(root, text="Salir", command=root.quit, style="TButton")
        self.btn_salir.pack(pady=10)

    def realizar_operacion(self):
        try:
            num1 = float(self.entry_num1.get())
            num2 = float(self.entry_num2.get())
            operacion = self.operacion_var.get()
            
            resultado = self.controller.realizar_operacion(operacion, num1, num2)
            self.label_resultado.config(text=f"Resultado: {resultado}")
        except ValueError as e:
            messagebox.showerror("Error", str(e))
        except Exception as e:
            messagebox.showerror("Error", "Por favor ingrese números válidos")


Y este es mi archivo main.py

# main.py
import tkinter as tk
from operaciones import Calculator
from GUI import CalculatorUI
from Controlador import CalculatorController

if __name__ == "__main__":
    root = tk.Tk()
    calc = Calculator()
    controller = CalculatorController(calc)
    ui = CalculatorUI(root, controller)
    root.mainloop()


Necesito que me ayudes a agregar una funcionalidad que permita evaluar integrales sin modificar demasiado las cosas que ya hay en el proyecto
y cumpliendo con las siguientes consignas:

El programa debe entregar como resultado los siguientes datos:
 La integral de la función elegida con los límites de integración.
 El resultado de la integración es decir el área obtenida.
 El error cometido en la integración.
El informe debe contener:
 Encabezado con información sobre los integrantes, a lo sumo dos por grupo.
 Introducción donde se especifique, la elección junto a una breve descripción y caracterización
del lenguaje de programación utilizado.
 El listado completo de las instrucciones o sentencias de el/los programas.
 Bibliografía utilizada.
Especificaciones:
Primera función:
F(x) = a x n

a Є R y n Є Z, ingresados por el usuario
Límites de integración variables y enteros ingresados por el usuario.
Error menor a 1.10-6
Segunda función:
F(x) = a x 2 + b x + c a, b, c Є R, ingresados por el usuario
Límites de integración variables y enteros ingresados por el usuario.
Error menor a 1.10-6
Tercera función:
F(x) = A sen k x A, k Є R, ingresados por el usuario
Límites de integración variables y expresados en fracciones de π, ingresados
por el usuario.
Error menor a 1.10-6

si bien estas consignas ponen algunos ejemplos la idea seria que el programa pueda procesar cualquier integral incluidos los ejemplos.